<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!-- $Id: build.xml 3351 2008-07-19 19:54:12Z joern $ -->
<project id="betty" name="betterForm Betty" basedir="." default="deploy">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- global properties -->
    <!-- classpath properties -->
    <!-- ###
            ATTENTION - the properties below must be set before build.properties.xml
            is called - DO NOT MOVE
     ###  -->
    <property name="project.dir" value="."/>
    <property name="core.dir" value="${project.dir}/../core"/>
    <property name="web.dir" value="${project.dir}/../web"/>
    <property name="betty.dir" value="."/>
    <property name="resource.dir" value="${project.dir}/../resource"/>

    <xmlproperty file="${basedir}/../build.properties.xml"
             semanticAttributes="true" keepRoot="false" />

    <!-- local Betty properties -->
    <property file="build.properties"/>
    <property file="signjar.properties"/>
    <property name="target" value="${basedir}/target"/>
    <property name="targetname" value="${target}/${betty.app.name}"/>
    <property name="forms.target" value="."/>
    <!--<property name="dojo.name" value="dojo-release-1.1.1"/>-->

    <target name="clean" description="clean build target directory">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="cleaning up betty..."/>
        <echo message="************************************************************************************"/>    
        <echo message="$["/>
        <echo/>
        
        <delete dir="${basedir}/target"/>
    </target>

    <target name="copy-java-policy">
        <copy file="betty.policy" tofile="${java.home}/.java.policy"/>
    </target>

    <target name="prepare">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Core classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <tstamp/>

        <delete dir="${target}/classes/"/>
        <mkdir dir="${target}/classes"/>

        <ant antfile="${core.dir}/build.xml" target="compile" dir="${core.dir}" inheritall="false"/>

        <copy todir="${target}/classes">
            <fileset dir="${core.dir}/target/classes"/>
        </copy>

        <!-- set version filter -->
        <filter token="betty.name" value="${betty.app.name}"/>
        <filter token="betty.version" value="${betty.app.version}"/>

        <copy todir="${targetname}"
              file="${basedir}/src/resources/version.info"
              filtering="true"
              overwrite="true"/>

   </target>

    <target name="check.dojo">
        <echo>Check condition</echo>
        <condition property="dojo.not.available">
            <not><available file="${targetname}/resources/scripts/dojo/dojo.js"/></not>
        </condition>
    </target>


<!--
    <target name="prepare-js" depends="check.dojo" if="dojo.not.available">
        <ant  antfile="build.xml" target="prepare-js" dir=".." inheritall="false"/>
        <copy  description="copy javascript resources from global directory"
               todir="${targetname}/resources/scripts"
               includeemptydirs="true">
            <fileset dir="../target/resources/scripts">
                <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>
-->


    <target name="compile" depends="prepare" description="compiling Betty classes">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="compiling Betty classes..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        
        <javac srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="betty.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"/>
    </target>

    <target name="create-jar" depends="compile" description="create Betty jar">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating Betty jar..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <delete file="${targetname}.jar"/>
        <jar description="package betty jar"
            jarfile="${targetname}.jar"
            basedir="${basedir}/target/classes"/>

    </target>


    <target name="deploy" depends="create-jar" description="create a runnable installation">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating Betty application layout..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Betty jar..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${targetname}/bin"
              file="${targetname}.jar" overwrite="true"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Core jars..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${targetname}/bin">
            <fileset dir="${core.dir}/src/main/lib"/>
        </copy>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying resources..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${targetname}/resources">
            <fileset dir="${basedir}/src/resources" />
        </copy>

         <copy todir="${targetname}/resources">
            <fileset dir="${basedir}/${properties.rootDir}/resource/src/main/resources"  />
        </copy>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying scripts ..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <untar src="${resource.dir}/src/main/lib/dojo-release-1.6.1-src.tar.gz" dest="${targetname}/resources/scripts" compression="gzip">
            <cutdirsmapper dirs="1"/>
        </untar>

        <!--<copy file="${basedir}/betty.policy" todir="${targetname}/bin"/>-->
        <copy file="${basedir}/install.bat" todir="${targetname}/bin"/>
        <copy file="${web.dir}/src/main/webapp/WEB-INF/betterform-config.xml" todir="${targetname}/bin"/>

        <copy file="${basedir}/src/resources/etc/log4j.xml" todir="${targetname}/bin"/>


    </target>

    <target name="copy-forms" description="copy forms">
        <copy file="${basedir}/src/registration.html" todir="${targetname}"/>
        <echo>
        ************************************************************************************
        preparing forms for betty ...
        ************************************************************************************
        </echo>
        <xslt basedir="${resource.dir}/src/main/xforms"
              destdir="${basedir}/target/forms/"
              style="${basedir}/src/resources/xslt/xhtml2betty.xsl"
              force="true"
              includes="**/*.xhtml"
              extension=".html"
              filedirparameter="filedir">
            <classpath refid="transform.class.path"/>
        </xslt>

        <echo>
        ************************************************************************************
        copying forms ...
        ************************************************************************************
        </echo>
        <copy todir="${basedir}/target/${betty.app.name}" flatten="true">
            <fileset dir="${basedir}/target/forms" includes="**/*.html"/>
        </copy>


        <echo>
        ************************************************************************************
        copying resources ...
        ************************************************************************************
        </echo>
        <copy todir="${basedir}/target/${betty.app.name}" overwrite="true">
            <fileset dir="${resource.dir}/src/main/xforms" excludes="**/*.xhtml"/>
        </copy>

        <!--<delete dir="${basedir}/target/forms"/>   -->
<!--
        <copy todir="${targetname}/${forms.target}"
              overwrite="true">
            <fileset dir="${basedir}/${properties.rootDir}/src/main/html"/>
            <filterset>
                <filter token="app.name" value="${betty.app.name}"/>
                <filter token="app.version" value="${betty.app.version}"/>
                <filter token="applet.archive" value="${betty.app.name}-${betty.app.version}.jar,${runtime.libs}"/>
            </filterset>
        </copy>
-->
    </target>

    <target name="dist" depends="clean, compile, test, javadoc, deploy" description="make a complete distribution">
        <!-- create dist directory -->
        <mkdir dir="${basedir}/target/betty-dist"/>

        <!-- copy doc directory -->
        <copy todir="${target}/doc">
            <fileset dir="${basedir}/doc"/>
        </copy>

        <!-- package zip -->
        <zip basedir="${target}" destfile="${target}-${app.version}.zip"/>
    </target>

    <target name="javadoc" depends="compile" description="generate source documentation">
        <javadoc sourcepath="${basedir}/src/main/java" classpathref="build.class.path" destdir="${target}/api">
            <fileset dir="${basedir}/src/main/java"/>
        </javadoc>
    </target>

    <target name="test" depends="compile" description="run all unit tests">
        <mkdir dir="${basedir}/target/test"/>

        <!-- run junit in batch mode -->
        <junit printsummary="on">
            <classpath refid="test.class.path"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${basedir}/target/test">
                <!--<fileset dir="${resource.dir}" includes="**/*Test.java"/>-->
                <fileset dir="${basedir}/src/test" includes="**/*Test.java"/>
            </batchtest>
        </junit>

        <!-- create test report directory -->
        <mkdir dir="${basedir}/target/test"/>

        <!-- generate test report -->
        <junitreport todir="${basedir}/target/test">
            <fileset dir="${basedir}/src/test">
                <include name="TEST-*.xml"/>
            </fileset>
            <!--<report todir="${doc.dir}/test"/>-->
            <report todir="${basedir}/target/test/doc"/>
        </junitreport>

        <!-- remove test results dir -->
        <delete dir="${basedir}/target/test/doc"/>
    </target>

    <target name="sign-jars" depends="deploy" description="signs applet jars">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="signing jars..."/>
        <echo message="************************************************************************************"/>
        <echo/>


<!--
        <genkey alias="${signjar.alias}" storepass="${signjar.storepass}" keystore="${basedir}/target/keystore">
            <dname>
                &lt;!&ndash;CommonName&ndash;&gt;
                <param name="CN" value="betterform.de"/>
                &lt;!&ndash; OrganizationalUnit &ndash;&gt;
                <param name="OU" value="betterFORM project"/>
                &lt;!&ndash; Organization &ndash;&gt;
                <param name="O" value="betterFORM"/>
                &lt;!&ndash; CountryCode &ndash;&gt;
                <param name="C" value="DE"/>
                &lt;!&ndash; Location &ndash;&gt;
                <param name="L" value="Berlin"/>
                &lt;!&ndash; State &ndash;&gt;
                <param name="ST" value="Berlin"/>
            </dname>
        </genkey>
-->

        <!-- sign jar -->
        <!-- todo: existence of keystore must be checked -->
        <signjar alias="${signjar.alias}" storepass="${signjar.storepass}" keystore="${basedir}/target/keystore">
            <!--<fileset dir="${deploy.dir}/${app.name}-${app.version}/bin" includes="*.jar"/>  -->
            <fileset dir="${targetname}/bin" includes="*.jar"/>
        </signjar>
    </target>

    <!-- this target generates the build.properties for Ant. A call to this target is necessary to update
    the string listing the libraries on the classpath which is later used for the applet tag. Therefore
    is should be called once whenever the classpath changes. -->
    <target name="buildLibParams" description="generate Ant properties file">
        <ant antfile="${basedir}/src/tools/build.xml" target="buildLibParams"/>
    </target>


    <!--
        <target name="XHTML2Convex" description="imports forms created by XFormations">
            <xslt in="${basedir}/src/main/forms/actions-orig.xhtml"
                out="${basedir}/src/main/forms/actions-new.xhtml"
                style="${basedir}/src/main/resources/xslt/xhtml2convex.xsl"
                force="yes" >
            </xslt>

        </target>
    -->

</project>
