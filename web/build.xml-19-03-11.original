<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2012. betterFORM Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

<!--
    author: Joern Turner
    author: Lars Windauer
 -->
<project id="web" name="betterForm Web" default="deploy" basedir=".">

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- ###
          ATTENTION - the properties below must be set before build.properties.xml
          is called - DO NOT MOVE
  ###  -->

    <property name="root.dir" value=".."/>
    <property name="resource.module.dir" value="../resource"/>
    <property name="resource.src.dir" value="${resource.module.dir}/src"/>
    <property name="core.dir" value="../core"/>
    <property name="web.dir" value="."/>
    <xmlproperty file="../build.properties.xml" semanticAttributes="true" keepRoot="false"/>


    <!-- local Web properties -->
    <property name="forms.target" value="forms"/>
    <property name="lib.dir" value="${basedir}/src/main/lib"/>
    <property name="target" value="${basedir}/target"/>
    <property name="webapp.dir" value="${target}/${web.app.name}"/>
    <!--<property name="resources.dir" value="${webapp.dir}/resources"/>-->
    <property name="resources.dir" value="${webapp.dir}/WEB-INF/classes/META-INF/resources"/>
    <property name="targetname" value="${target}/${web.app.name}-${web.app.version}"/>
    <property name="servlet.container" value="${properties.webappPath}"/>
    <antversion property="antversion" atleast="1.7"/>
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <!-- **************************************** HOUSEKEEPING **************************************** -->
    <target name="clean" description="clean build target directory">
        <echo>
        ************************************************************************************
        cleaning up web...
        ************************************************************************************
        </echo>
        <delete dir="${basedir}/target"/>
    </target>

    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <!-- **************************************** PREPARATION **************************************** -->
    <target name="prepare" description="init the build process" depends="check-ant-version" if="antversion">
        <echo>
        ************************************************************************************
        copying Core classes...
        ************************************************************************************
        </echo>

        <tstamp/>
        <mkdir dir="${target}/classes"/>

        <ant antfile="build.xml" target="compile" dir="${core.dir}" inheritall="false"/>

        <copy todir="${target}/classes">
            <fileset dir="${core.dir}/target/classes"/>
        </copy>
    </target>

    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->
    <!-- **************************************** COMPILATION **************************************** -->

    <!--
        Default build.properties setting are as below. If you need to compile with debug settings you can either
        a. change relevant properties in build.properties.xml or
        b. call Ant like this: ant compile -Djavac.debug="true"

        javac.debug=off
        javac.deprecation=off
        javac.optimize=on

    -->

    <target name="compile" depends="prepare" description="compile all web sources">
        <echo>
        ************************************************************************************
        compiling Web classes...
        ************************************************************************************
        </echo>

        <javac description="compile source files"
               srcdir="${basedir}/src/main/java"
               destdir="${target}/classes"
               classpathref="web.class.path"
               target="${properties.javac.version}"
               debug="${properties.javac.debug}"
               deprecation="${properties.javac.deprecation}"
               optimize="${properties.javac.optimize}"
               includeantruntime="false"
               nowarn="true"
                />
    </target>

    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->
    <!-- **************************************** DEPLOYMENT **************************************** -->
    <target name="prepare-site" description="generates the betterFORM site">
        <xslt basedir="${basedir}/../src/main/website/pages"
              destdir="${basedir}/src/main/webapp/site"
              style="${basedir}/../src/main/website/xslt/site.xsl"
              force="true"
              includes="**/*.xhtml"
              excludes="**/demo.xhtml"
              extension=".html"
              filenameparameter="currentFile">
            <classpath refid="transform.class.path"/>
        </xslt>
        <antcall target="deploy-resources"/>
    </target>

    <target name="create-single-jar"
            description="creates a single jar for all classes and resources">

        <!--<antcall target="create-jar"/>-->
        <antcall target="compile"/>

        <echo>
        ************************************************************************************
        copy resources to META-INF/resources
        ************************************************************************************
        </echo>
        <copy todir="${basedir}/target/classes/META-INF/resources">
            <fileset dir="${resource.src.dir}/main/resources" includes="**/*" excludes="scripts/**" />
        </copy>

        <!--delete the script folder - did not find a solution to exclude these in the copy above -->
        <!--<delete dir="${basedir}/target/classes/META-INF/resources/scripts"/>-->

        <!-- recreate script folder -->
        <!--<mkdir dir="${basedir}/target/classes/META-INF/resources/scripts/release"/>-->


        <echo>
        ************************************************************************************
        unpacking optimized javascript library
        ************************************************************************************
        </echo>
        <unzip src="${resource.src.dir}/main/lib/betterform-js-optimized.zip"
               dest="${basedir}/target/classes/META-INF/resources/scripts"/>
        <echo>
        ************************************************************************************
        compressing classes plus resources into a single jar
        ************************************************************************************
        </echo>
        <jar basedir="${target}/classes" compress="true" jarfile="${basedir}/target/betterform.jar" update="true">
            <exclude name="schema/**"/>
        </jar>

        <echo>
            ************************************************************************************
            copying jar to WEB-INF/lib
            ************************************************************************************
        </echo>
        <!--<copy todir="${webapp.dir}/WEB-INF/lib" file="${web.dir}/target/betterform.jar"/>-->

        <echo>
            ************************************************************************************
            deleting exploded classes folder to avoid conflicts
            ************************************************************************************
        </echo>
        <!--<delete dir="${webapp.dir}/WEB-INF/classes"/>-->



    </target>

    <target name="exploded-webapp-base"
            description="deployment for new resource loading">
        <echo>
        ************************************************************************************
                                unoptimized DEVELOPMENT deployment
        ************************************************************************************
        ************************************************************************************
        build deployment structure (exploded war) - creates bare-bone structure of webapp with:
        - dashboard.html (should be moved to resources too)
        - blank.html (needed by Dojo loader)
        - jsp folder (should be eliminated)
        - an empty upload dir (preconfigured directory)
        - WEB-INF with config-files

        This target explicitly does not handle:
            - global resources including JavaScript
            - betterFORM Java classes
            - copying of libs betterFORM depends on

        These must be handled by target depending on this.
        ************************************************************************************
        </echo>
        <mkdir dir="${webapp.dir}"/>
        <mkdir dir="${webapp.dir}/upload"/>

        <echo>
        ************************************************************************************
        copying webapp folder from src
        ************************************************************************************
        </echo>
        <!--todo: webapp dir should be urgently be cleaned up from betterform site resources. Therefore this
        copy only copies positively -->
        <copy description="copy webapp/jsp dir"
              todir="${webapp.dir}/jsp"
              filtering="true">
            <fileset dir="${basedir}/src/main/webapp/jsp"/>
        </copy>
        <copy description="copy dashboard"
              todir="${webapp.dir}"
              filtering="true"
              file="${basedir}/src/main/webapp/dashboard.html"/>
        <copy description="copy blank"
              todir="${webapp.dir}"
              filtering="true"
              file="${basedir}/src/main/webapp/blank.html"/>
        <copy description="copy WEB-INF dir"
              todir="${webapp.dir}/WEB-INF"
              filtering="true">
            <fileset dir="${basedir}/src/main/webapp/WEB-INF"/>
        </copy>

    </target>

    <target name="copy-libs" unless="should.not.copy.libs">
        <echo>
        ************************************************************************************
        copying libs betterFORM is dependent on (core + web) ...
        ************************************************************************************
        </echo>
        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Core">
            <fileset dir="${core.dir}/src/main/lib" excludes="**/betterform-core"/>
        </copy>
        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Web" flatten="true">

            <!-- todo: need a better solution here - not all libs form web/src/main/lib are runtime relevant.
                Therefore only needed libs are copied directly here.
			-->
            <fileset dir="${basedir}/src/main/lib" excludes="**/${core.app.name}-${core.app.version}.jar">
                <include name="**/dwr*"/>
            </fileset>
        </copy>
    </target>

    <target name="deploy-exploded"
            depends="exploded-webapp-base"
            description="deploys classes and resources tree to WEB-INF/classes">

        <antcall target="compile"/>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="moving betterFORM classes to WEB-INF/classes"/>

        <antcall target="copy-libs"/>

        <echo>
        ************************************************************************************
        deploying classes + resources tree to WEB-INF/classes (developer mode)
        ************************************************************************************
        </echo>

        <antcall target="copy-src-resources"/>
        <ant antfile="${resource.module.dir}/build-dojo.xml" target="prepare-dojo" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>

        <ant antfile="${resource.module.dir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts"/>
        </ant>
    </target>

    <target name="deploy" depends="compile, exploded-webapp-base, create-single-jar" description="default deployment as single jar">
        <echo>
        ************************************************************************************
                                optimized PRODUCUTION deployment
        ************************************************************************************
        </echo>

        <!-- todo: integrate with one-jar -->
        <antcall target="copy-libs"/>
        <echo>
        ************************************************************************************
        copying betterform.jar to WEB-INF/lib
        ************************************************************************************
        </echo>
        <copy todir="${webapp.dir}/WEB-INF/lib" file="${web.dir}/target/betterform.jar"/>
    </target>

    <target name="deploy-forms" description="deploy the forms to target">
        <echo>
        ************************************************************************************
        copying forms...
        ************************************************************************************
        </echo>

        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${resource.module.dir}/src/main/xforms"/>
        </copy>
    </target>

    <target name="exploded-webapp.old" depends="compile"
            description="builds an exploded webapp with expanded 'WEB-INF/classes' dir">
        <echo>
        ************************************************************************************
        build deployment structure (exploded war)...
        ************************************************************************************
        </echo>
        <mkdir dir="${webapp.dir}"/>

        <!-- copy the webapp directory -->
        <copy description="copy webapp"
              todir="${webapp.dir}"
              filtering="true"
              includeemptydirs="true">
            <fileset dir="${basedir}/src/main/webapp"/>
        </copy>

<!--
        <copy description="copy test result reports"
              todir="${webapp.dir}/reports">
            <fileset dir="${root.dir}/src/main/doc/site/content/reports"/>
        </copy>


-->

        <antcall target="copy-src-resources"/>

        <mkdir dir="${webapp.dir}/WEB-INF/lib"/>

        <move file="${target}/classes"
              todir="${webapp.dir}/WEB-INF"
              description="move betterForm classes to WEB-INF"/>

        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Core">
            <fileset dir="${core.dir}/src/main/lib" excludes="**/betterform-core"/>
        </copy>

        <copy todir="${webapp.dir}/WEB-INF/lib" description="copy dependent libraries from Web" flatten="true">

            <!-- todo: need a better solution here - not all libs form web/src/main/lib are runtime relevant.
   						Therefore only needed libs are copied directly here.
			-->
            <fileset dir="${basedir}/src/main/lib" excludes="**/${core.app.name}-${core.app.version}.jar">
                <include name="**/dwr*"/>
            </fileset>
        </copy>

        <ant  target="prepare-dojo"/>

        <!--
                <copy description="copy all resources"
                    todir="${webapp.dir}/WEB-INF/classes"
                    includeemptydirs="false"
                    overwrite="true">
                    <fileset dir="${basedir}/src/main/resources"/>
                </copy>
        -->
        <delete file="${webapp.dir}/WEB-INF/classes/log4j.xml"/>
        <delete file="${webapp.dir}/WEB-INF/classes/log4j.dtd"/>

    </target>

    <target name="copy-src-resources">
        <echo>
        ************************************************************************************
        copying global resources (CSS, styles, XSLT ... (excluding scripts)
        ************************************************************************************
        </echo>

         <copy description="copy resources from global 'src' directory"
              todir="${resources.dir}"
              includeemptydirs="true">
            <fileset dir="${resource.src.dir}/main/resources">
                <exclude name="**/scripts/**"/>
            </fileset>
        </copy>

        <ant antfile="${resource.module.dir}/build-dojo.xml" target="copy-src-resources-scripts" usenativebasedir="true">
            <property name="scripts.target" value="${resources.dir}/scripts/dojo"/>
        </ant>
        <!--<antcall target="copy-src-resources-scripts"/>-->

<!--
        <copy description="copy images seperately to avoid filtering"
              todir="${resources.dir}"
              overwrite="true"
              filtering="false">
            <fileset dir="${src.dir}/main/resources">
                <include name="**/*.gif"/>
                <include name="**/*.png"/>
                <include name="**/*.jpg"/>
            </fileset>
        </copy>
-->

    </target>

    <!-- target to concat optimized DWR JS with Dojo / TODO: enhance to fit into buildcycle-->
    <target name="concat">
        <move file="${resources.dir}/scripts/release/dojo/betterform/betterform-full.js" tofile="${resources.dir}/scripts/release/dojo/betterform/betterform-full.js.original"/>
        <concat destfile="${resources.dir}/scripts/release/dojo/betterform/betterform-full.js" force="yes">

            <filelist dir="${resources.dir}/scripts/release/dojo/betterform" files="betterform-full.js.original"/>
            <filelist dir="${resources.dir}/scripts" files="dwr.js"/>
        </concat>
    </target>



    <!-- todo: rename to deploy-forms. 'resources' is misleading here. Docs must be changed appropriately -->
    <target name="deploy-resources.old" depends="exploded-webapp"
            description="copy all forms from src/main/xforms to webapp dir">

        <property name="onlineVersion" value="false"/>

        <echo>
        ************************************************************************************
        copying forms...
        ************************************************************************************
        </echo>

        <copy todir="${webapp.dir}/${forms.target}"
              overwrite="true">
            <fileset dir="${basedir}/${properties.rootDir}/src/main/xforms"/>
        </copy>
    </target>

    <target name="deploy-to-servlet-container.old" depends="deploy-resources"
            description="copy all resources (including forms) to webapp dir">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="deploy into servlet container..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${servlet.container}/${web.app.name}"
              overwrite="true">
            <fileset dir="${webapp.dir}"/>
        </copy>
    </target>


    <target name="deploy-test-resources.old" description="copy all official XForms test suite files to webapp dir">
        <ant antfile="build.xml" target="deploy-resources" dir="${basedir}" inheritall="false"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying Test Suites..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <copy todir="${webapp.dir}/${forms.target}">
            <fileset dir="../src/test/resources"/>
        </copy>
    </target>
    

    <!-- **************************************** BUILDING JAR/WAR **************************************** -->
    <!-- **************************************** BUILDING JAR/WAR **************************************** -->
    <!-- **************************************** BUILDING JAR/WAR **************************************** -->

    <target name="cleanup-bf-release">
        <echo message="************************************************************************************"/>
        <echo message="clean up forms package..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${webapp.dir}/forms/incubator"/>
        <delete dir="${webapp.dir}/forms/test"/>

        <echo message="************************************************************************************"/>
        <echo message="clean up not packaged javascript..."/>
        <echo message="************************************************************************************"/>
        <echo/>
        <delete dir="${resources.dir}/scripts/betterform"/>
        <delete dir="${resources.dir}/scripts/dijit"/>
        <delete dir="${resources.dir}/scripts/dojo"/>
        <delete dir="${resources.dir}/scripts/dojox"/>
        <delete dir="${resources.dir}/scripts/util"/>
    </target>


    <!-- **************************************** BUILDING JAR/WAR **************************************** -->
    <!-- **************************************** BUILDING JAR/WAR **************************************** -->
    <!-- **************************************** BUILDING JAR/WAR **************************************** -->
    <!-- todo: when package is executed it should be made sure that 'dojo' is configured as useragent in betterform-config.xml -->
    <target name="package" depends="exploded-webapp-base" description="create js optimized war file">

        <antcall target="build-dojo"/>
        <antcall target="cleanup-js-release"/>
        <antcall target="cleanup-bf-release"/>

        <echo/>
        <property name="onlineVersion" value="true"/>


        <copy todir="${webapp.dir}"
              file="${basedir}/../src/test/resources/XFormsTestSuite1.1E1/Edition1/driverPages/Results/results.html"/>

        <antcall target="create-war"/>
    </target>

    <target name="create-war">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating war-file..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <war warfile="${targetname}.war"
             webxml="${webapp.dir}/WEB-INF/web.xml"
             basedir="${webapp.dir}">
        </war>
    </target>

     <target name="create-jar" depends="compile">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating jar-file..."/>
        <echo message="************************************************************************************"/>
        <echo/>

         <jar basedir="${target}/classes" compress="true" jarfile="${targetname}.jar" update="true">
            <exclude name="schema/**"/>
        </jar>
    </target>


    <!-- todo: add target 'package-for-integration' that contains all files needed for inclusion in another webapp-->

    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <!-- **************************************** SOURCE DISTRIBUTION **************************************** -->
    <target name="prepare-distribute" depends="clean">
        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="preparing distribution..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="copying source web source tree..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <copy todir="${targetname}/web">
            <fileset dir="${basedir}"/>
        </copy>

        <copy file="${basedir}/../build.properties.xml" todir="${targetname}"
              description="copy global build.properties.xml"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="building Core jar for inclusion into web sources..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <ant antfile="${core.dir}/build.xml" target="clean" dir="${core.dir}"/>
        <ant antfile="${core.dir}/build.xml" target="package" dir="${core.dir}" inheritall="false"/>

        <copy file="${core.dir}/target/${core.app.name}-${core.app.version}.jar"
              todir="${targetname}/web/src/main/lib"/>

        <copy todir="${targetname}/web/src/main/lib" flatten="true">
            <fileset dir="${core.dir}/src/main/lib"/>
        </copy>
    </target>

    <target name="distribute" depends="prepare-distribute"
            description="assembles binary and source distributions">

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating source distribution..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating gzip..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <tar description="create source tarball"
             tarfile="${targetname}-src.tar"
             basedir="${targetname}"/>

        <gzip description="create source tarball"
              zipfile="target/${web.app.name}-${web.app.version}-src.tar.gz"
              src="target/${web.app.name}-${web.app.version}-src.tar"/>
        <delete description="create source tarball"
                file="target/${web.app.name}-${web.app.version}-src.tar"/>

        <echo/>
        <echo message="************************************************************************************"/>
        <echo message="creating zip..."/>
        <echo message="************************************************************************************"/>
        <echo/>

        <zip description="create source zip"
             zipfile="target/${web.app.name}-${web.app.version}-src.zip"
             basedir="${targetname}"/>
    </target>


    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <!-- **************************************** DOC TARGETS **************************************** -->
    <target name="doc" depends="compile" description="generate documentation">
        <!--create deploy directory-->
        <mkdir dir="${basedir}/target/doc"/>

        <!--generate source code documentation-->
        <javadoc description="generate api documentation"
                 sourcepath="${basedir}/src/main/java"
                 destdir="${basedir}/target/doc"
                 classpathref="compile.class.path"
                 packagenames="de.betterform.*">
        </javadoc>

        <!--set version filter-->
        <filter token="app.version" value="${app.version}"/>
    </target>

    <!-- **************************************** DOJO TARGETS **************************************** -->
    <!-- **************************************** DOJO TARGETS **************************************** -->
    <!-- **************************************** DOJO TARGETS **************************************** -->




    <!--  Check if dojo is already unpacked -->



    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->
    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->
    <!-- **************************************** FORM AGGREGATION TARGETS **************************************** -->


    <path id="saxon.libs" description="classpath for Saxon">
        <pathelement location="${basedir}/../core/src/main/lib/saxon-9.0.jar"/>
        <pathelement location="${basedir}/../core/src/main/lib/saxon-dom-9.0.jar"/>
    </path>


    <!-- ### applies include.xsl to all forms found in 'src/main/forms/xforms' and
             deploys the result to target ### -->
    <target name="assembleForms">

        <xslt basedir="${basedir}/${properties.rootDir}/src/main/xforms"
              destdir="${webapp.dir}/${forms.target}"
              style="${basedir}/src/main/webapp/resources/xslt/include.xsl"
              force="true"
              includes="**/*.xhtml"
              extension=".xhtml">
            <classpath refid="saxon.libs"/>
        </xslt>
    </target>

    <target name="check-ant-version" unless="antversion">
        <echo>Apache Ant 1.7 or higher is required for this target. Please upgrade your Apache Ant version (${ant.version}) to minimum version 1.7 You can retreive the latest Ant here: http://ant.apache.org/bindownload.cgi</echo>
    </target>

</project>
