<?xml version="1.0" encoding="UTF-8" ?>
<!-- $Id: build.xml,v 1.90 2006/11/16 23:55:43 joernt Exp $ -->
<project name="Editor generator tools" default="deployEditor" basedir=".">


    <!--

    author: Joern Turner (2010)
    -->

    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->
    <!-- **************************************** PROPERTIES **************************************** -->

    <property name="core.dir" value="${basedir}/../../core"/>
    <property name="project.dir" value="${basedir}/../.."/>
    <xmlproperty file="${project.dir}/build.properties.xml"
                 semanticAttributes="true" keepRoot="false"/>

    <target name="clean">
        <delete dir="${basedir}/target"/>
    </target>

    <target name="prepare">
        <mkdir dir="${basedir}/target"/>
    </target>

    <target name="generate-XForms" depends="prepare" description="generates XForms">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/xforms.xml"
              style="${basedir}/generateXForms.xsl"
              force="true"
                classpathref="transform.class.path">
        </xslt>
    </target>

    <!--<target name="sort-XForms" depends="generate-XForms" description="sort properties">-->
    <target name="sort-XForms" description="sort properties">
        <xslt basedir="${basedir}/target/xforms"
            destdir="${basedir}/target/sortedxforms/"
            style="${basedir}/sortXForms.xsl"
            extension=".xhtml"
            force="true">
            <classpath refid="transform.class.path"/>            
        </xslt>
    </target>
    
    <target name="generate-HTML-Forms" depends="generate-xf-datatype-list"  description="generates HTML forms from XForms">
        <antcall target="sort-XForms"/>
        <xslt basedir="${basedir}/target/sortedxforms"
              destdir="${basedir}/target/html/"
              style="${basedir}/generate-html-forms.xsl"
              extension=".html"
              force="true"
              classpathref="transform.class.path">
            <classpath refid="transform.class.path"/>

        </xslt>

    </target>

    <target name="generate-xf-datatype-list"  description="generates HTML forms from XForms">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/html/xfDatatype.json"
              style="${basedir}/generateXFDatatypeList.xsl"
              extension=".json"
              force="true"
              classpathref="transform.class.path">
            <classpath refid="transform.class.path"/>
        </xslt>
    </target>


    <target name="generate-Prototypes" depends="prepare" description="generate Prototypes for XForms element structure">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/prototypes.xml"
              style="${basedir}/generatePrototypes.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generate-test-form-nested-divs" depends="prepare" description="generate test form for editor">
        <xslt in="${basedir}/testinput/registration.xhtml"
              out="${basedir}/target/registration-div.xml"
              style="${basedir}/xf2div.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>


    <!-- for testing - real version is in incubator/editor -->
    <target name="dom2xf" depends="prepare" description="turn DOM from client into xforms againr">
        <xslt in="${basedir}/testinput/dump.xml"
              out="${basedir}/target/dump-xforms.xhtml"
              style="${basedir}/dom2xf.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <!-- base transform that generates a list of possible child elements for a given parent. The whole
    thing is generated to ul/li structures and should be used as a base for further transforms. -->
    <target name="generateChildList" depends="prepare" description="generate list of possible child elements">
        <xslt in="${basedir}/XForms-11-Schema.xsd"
              out="${basedir}/target/childlist.xml"
              style="${basedir}/generateChildList.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generateJSforChildElementCheck" depends="generateChildList" description="generate list of possible child elements">
        <echo>
            Attention: this target re-generates the list of childs from schema. The add menu js is created from
            an hand-edited version of this file in 'resources' dir.
        </echo>
        <xslt in="${basedir}/target/childlist.xml"
              out="${basedir}/target/xfUtil.js"
              style="${basedir}/generateJSforChildElementCheck.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generateJSforAddMenus" description="generate list of possible child elements">
        <xslt in="${basedir}/resources/childlist.xml"
              out="${basedir}/target/addMenu.js"
              style="${basedir}/generateJSforAddMenus.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>

    <target name="generate-Component Tree" depends="generateChildList" description="generates the markup for the componentTree ">
        <xslt in="${basedir}/target/childlist.xml"
              out="${basedir}/target/componentTree.html"
              style="${basedir}/generateComponentTree.xsl"
              force="true"
              classpathref="transform.class.path">
        </xslt>
    </target>


    <target  name="deployEditor" depends="generate-HTML-Forms" description="generates HTML forms and deploys them to xforms/incubator/editor">
        <copy todir="${basedir}/../../resource/src/main/xforms/incubator/editor" flatten="true" overwrite="true">
            <fileset dir="${basedir}" includes="target/html/*.html"/>
            <fileset dir="${basedir}" includes="target/html/*.json"/>
        </copy>
        <ant antfile="../../web/build.xml" inheritall="false" target="deploy-forms"/>
    </target>

    <target name="update-originDoc" description="generates the markup for the componentTree ">
        <xslt in="${basedir}/target/dump-xforms.xhtml"
              out="${basedir}/target/merged.xhtml"
              style="${basedir}/updateOriginal.xsl"
              force="true"
              classpathref="transform.class.path">
            <param name="originDoc" expression="testinput/registration.xhtml"/>
        </xslt>
    </target>

</project>
