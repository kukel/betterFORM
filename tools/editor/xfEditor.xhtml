<!--
  ~ Copyright (c) 2011. betterForm Project - http://www.betterform.de
  ~ Licensed under the terms of BSD License
  -->

        
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xml:lang="en" lang="en">
<head>

<title>XForms Editor for building XForms embedded in XHTML</title>


<style type="text/css">
    @import "/betterform/resources/scripts//dojo/resources/dojo.css";
    @import "/betterform/resources/scripts//dijit/themes/tundra/tundra.css";
    @import "/betterform/resources/scripts/dojox/layout/resources/ExpandoPane.css";

    html, body {
        height: 100%;
        width: 100%;
        margin: 0;
        padding: 0;
    }

    #bordercontainer {
        width: 100%;
        height: 100%;
    }

    #page {
        padding: 20px;
        margin:10px;
        background: #ffffe0;
        width:60%;
        float:left;
    }
    
    .xfModel, .xfInstance, .xfSubmission{
        padding: 5px;
        border:thin solid green;
        background:#4682b4;
        -moz-border-radius:8px;
        margin:10px;
        color:white;
        
    }
    .xfGroup {
        padding: 5px;
        padding-left: 20px;
        border: thin solid green;
        position: relative;
        background:orange;
        -moz-border-radius:8px;
        margin:10px;
    
    }

    .xfInput {
        width: 200px;
        display: block;
        margin: 5px;
        height: 20px;
        width: 200px;
        border: thin solid;

    }

    .cursor {
        border: 6px solid #90ee90;
        -moz-border-radius: 8px;
        -webkit-border-radius: 8px;
        display: block;
        margin: 0;

    }
    #propertyMount{
        position:relative;
    }
    #properties{
        position:absolute;
        right:0;
        top:0;
        border:thin solid gray;
        opacity:.9;
        background:#b0c4de;
        width:300px;
        height:100%;
        margin:10px;
        padding:20px;
        -moz-border-radius:8px;
    }
    #properties .xfLabel{
        opacity:1;
    }

        /*
                    .xfSelectable {
                        float: left;
                    }
        */
</style>
<!--
<script type="text/javascript">
    var djConfig = {
        parseOnLoad:true
    };
</script>
<script type="text/javascript"
        src="http://ajax.googleapis.com/ajax/libs/dojo/1.4.3/dojo/dojo.xd.js">
</script>
-->

<script type="text/javascript">
    <!--
    dojo.require("dijit.layout.BorderContainer");
    dojo.require("dijit.layout.ContentPane");
    dojo.require("dojox.layout.ExpandoPane");
    dojo.require("betterform.ui.container.Group");

    getParentByClass = function(/* node */ node, /*String*/ cssClass) {
        var body = dojo.body();
        while (node && node != body && !dojo.hasClass(node, cssClass)) {
            node = node.parentNode;
        }
        if (dojo.hasClass(node, cssClass)) {
            return node;
        }
        return null;
    };

    function select(newElement) {
        var current = dojo.query(".cursor")[0];
        if (current != undefined) {
            dojo.removeClass(current, "cursor");
        }
        if (dojo.hasClass(newElement, "xfSelectable")) {
            //add to new location
            if (!(dojo.hasClass(newElement, "cursor"))) {
                dojo.addClass(newElement, "cursor")
            }
        } else {
            var parent = getParentByClass(newElement.parentNode, "xfSelectable");
            if (parent != null) {
                dojo.addClass(parent, "cursor");
            }
        }
        //set the role
        fluxProcessor.setControlValue("currentRole",dojo.attr(dojo.query(".cursor")[0],"xfRole"));
        fluxProcessor.dispatchEvent("loadProperties");
    }

    function getCurrentIndex() {
        var current = dojo.query(".cursor")[0];
        var result;
        dojo.query(".xfSelectable").forEach(function(entry, idx) {
            if (dojo.hasClass(entry, 'cursor')) {
                console.debug("idx: ", idx);
                result = idx;
                return idx;
            }
        });
        return result;
    }

    function init() {
        //connect each xfSelectable to onclick to allow setting of cursor by mouseclick
        dojo.query(".xfSelectable").forEach(function(entry) {
            dojo.connect(entry, "onclick", function(evt) {

                console.debug("*** setCursor ***", evt.target);
                select(evt.target);
                evt.stopPropagation;
            });
        });

        //support for arrow up and arrow down to move selection (cursor)
        dojo.connect(document, "onkeypress", function(e) {
            var current = dojo.query(".cursor")[0];

            console.debug("key event: ", e);
            console.debug("altKey pressed?: ", e.altKey);

            if (e.altKey) {

                //arrow down
                if (e.keyCode == 40) {

                    //Node to move is always the currently selected Element
                    var currentNode = dojo.query(".cursor")[0];
                    console.debug("current Node: ", currentNode);

                    //find next xfSelected element and insert behind it
                    var currentIdx = getCurrentIndex();
                    console.debug("current Node idx: ", currentIdx);

                    var next = dojo.query(".xfSelectable")[currentIdx + 1];

                    // if current node is a group
                    if (dojo.hasClass(currentNode, "xfGroup")) {
                        var parentList = currentNode.parentNode;
                        console.debug("parent of this group: ", parentList);
                        console.debug("currentidx group: ", currentIdx);

                        next = dojo.query("> .xfSelectable", parentList)[currentIdx + 1];
                        console.debug("next: ", next);

                    }

                    //if next is a group
                    if (dojo.hasClass(next, "xfGroup")) {
                        console.debug("insert into Node: ", next);
                        //                        console.debug("next id: ", next.id);

                        var mount = dojo.query("> .contents", next)[0];
                        console.debug("mount in group: ", mount);

                        dojo.place(currentNode, mount, "first");

                    } else {
                        console.debug("insert after Node: ", next);
                        dojo.place(currentNode, next, "after");
                    }

                }
                //arrow up
                if (e.keyCode == 38) {
                    //Node to move is always the currently selected Element
                    var currentNode = dojo.query(".cursor")[0];
                    console.debug("current Node: ", currentNode);


                    //find previous xfSelected element and insert behind it
                    var currentIdx = getCurrentIndex();
                    var previous = dojo.query(".xfSelectable")[currentIdx - 1];
                    console.debug("previous sibling is: ", previous);
                    console.debug("previous sibling id is: ", previous.id);

                    if (previous.id == "page") {
                        return;
                    }

                    if (previous != undefined) {
                        //if previous is a group
                        //                        if (dojo.hasClass(previous, "xfGroup")) {
                        console.debug("step out of group: ", previous);
                        console.debug("previous id: ", previous.id);


                        /*

                         var mount = dojo.query("> .contents",previous)[0];
                         console.debug("mount in group: ",mount);

                         dojo.place(currentNode, mount, "before");

                         } else {
                         */
                        console.debug("insert before Node: ", previous);
                        dojo.place(currentNode, previous, "before");
                        //                        }
                    }
                }


            } else {
                //arrow down
                if (e.keyCode == 40) {
                    console.debug("arrow down pressed", e.target);

                    var currentIdx = getCurrentIndex();
                    next = dojo.query(".xfSelectable")[currentIdx + 1];
                    console.debug("next sibling is: ", next);

                    if (next != undefined) {
                        //we got one
                        select(next);
                        e.stopPropagation;
                        return;
                    }
                }
                //arrow up
                if (e.keyCode == 38) {
                    var currentIdx = getCurrentIndex();
                    next = dojo.query(".xfSelectable")[currentIdx - 1];
                    console.debug("previous sibling is: ", next);

                    if (next != undefined) {
                        //we got one
                        select(next);
                        e.stopPropagation;
                        return;
                    }
                }
            }


        });
    }

    dojo.addOnLoad(function() {
        init();
    });
    // -->
</script>

</head>
<body class="tundra">
        <div id="xforms" style="display:none">
            <xf:model id="m-editor">
                <xf:instance id="i-editor">
                    <data xmlns="">
                        <currentControlId></currentControlId>
                    </data>
                </xf:instance>
            </xf:model>
        </div>
    <div  design="sidebar" gutters="false" livesplitters="false"
         id="bordercontainer">
        <!--
                <div id="toolbar">

                </div>
        -->


        <div id="page" class="xfSelectable" region="center" dojotype="dijit.layout.ContentPane">
            <xf:trigger id="loadProperties">
                <xf:label>hidden trigger to load properties</xf:label>
                <xf:load show="embed" targetid="propertyMount">
                    <xf:resource value="concat(currentControlId,'.xhtml#xforms')"/>
                </xf:load>
            </xf:trigger>
            <xf:input id="currentRole" ref="currentControlId">
                <xf:label>the currently selected control</xf:label>
            </xf:input>

            <div class="xfSelectable xfModel" xfRole="model">
                <div class="id">model-1</div>

                <div class="xfSelectable xfInstance" xfRole="instance">
                    <div class="id">instance-1</div>
                
                </div>

                <div class="xfSelectable xfSubmission" xfRole="submission">
                    <div class="id">submission-1</div>
                    
                </div>
            </div>
            
            <!--
                        <table>
                            <tr>
                                <td>
            -->
            <div id="foo" class="xfSelectable xfInput cursor" xfRole="input">
                <div class="label">Input1</div>
                <div class="ref">street</div>
            </div>
            <!--
                                </td>
                                <td>
            -->
            <div class="xfSelectable xfInput" xfRole="input">
                <div class="label">Input2</div>
                <div class="ref">city</div>
            </div>
            <!--
                                </td>
                            </tr>
                        </table>
            -->

            <div class="xfSelectable xfGroup" xfRole="group">
                <div class="label">Group1</div>
                <div class="ref">address</div>
                <div class="appearance">full</div>
                <div class="message" level="ephemeral">wohoo</div>

                <div class="contents">
                    <div class="xfSelectable xfInput" xfRole="input">
                        <div class="label">Input3</div>
                    </div>

                    <div class="xfSelectable xfGroup" xfRole="input">
                        <div class="label">Group2</div>

                        <div class="contents">
                            <div class="xfSelectable xfInput" xfRole="input">
                                <div class="label">Input4</div>
                            </div>
                        </div>

                    </div>
                </div>

            </div>

            <div class="xfSelectable xfGroup">
                <div class="label">Group empty</div>
                <div class="contents"></div>
            </div>

            <div class="xfSelectable xfGroup">
                <div class="label">Group3</div>

                <div class="contents">
                    <div class="xfSelectable xfInput">
                        <div class="label">Input5</div>
                    </div>
                </div>
            </div>

        </div>

        <div region="right" maxWidth="200">
            <div id="propertyMount"></div>
        </div>
    </div>
    <!--<div dojotype="dojox.layout.ExpandoPane" id="properties" region="trailing" maxWidth="200" style="width:200px;">-->

    <!--
            <div id="menues">

            </div>
    -->


</body>
</html>
